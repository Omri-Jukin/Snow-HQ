/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/studio/generate-local/route";
exports.ids = ["app/api/studio/generate-local/route"];
exports.modules = {

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstudio%2Fgenerate-local%2Froute&page=%2Fapi%2Fstudio%2Fgenerate-local%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudio%2Fgenerate-local%2Froute.ts&appDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstudio%2Fgenerate-local%2Froute&page=%2Fapi%2Fstudio%2Fgenerate-local%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudio%2Fgenerate-local%2Froute.ts&appDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/../../node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/../../node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/../../node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/../../node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/../../node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/../../node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/../../node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/../../node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/../../node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/../../node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/../../node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/../../node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var C_Users_omrij_OneDrive_Desktop_Repos_Snow_HQ_apps_studio_app_api_studio_generate_local_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/studio/generate-local/route.ts */ \"(rsc)/./app/api/studio/generate-local/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/studio/generate-local/route\",\n        pathname: \"/api/studio/generate-local\",\n        filename: \"route\",\n        bundlePath: \"app/api/studio/generate-local/route\"\n    },\n    distDir: \".next\" || 0,\n    projectDir:  false || '',\n    resolvedPagePath: \"C:\\\\Users\\\\omrij\\\\OneDrive\\\\Desktop\\\\Repos\\\\Snow HQ\\\\apps\\\\studio\\\\app\\\\api\\\\studio\\\\generate-local\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_omrij_OneDrive_Desktop_Repos_Snow_HQ_apps_studio_app_api_studio_generate_local_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/studio/generate-local/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = \"false\";\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                dynamicIO: Boolean(nextConfig.experimental.dynamicIO),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstudio%2Fgenerate-local%2Froute&page=%2Fapi%2Fstudio%2Fgenerate-local%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudio%2Fgenerate-local%2Froute.ts&appDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/studio/generate-local/route.ts":
/*!************************************************!*\
  !*** ./app/api/studio/generate-local/route.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AttributeEnum: () => (/* binding */ AttributeEnum),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   StyleEnum: () => (/* binding */ StyleEnum),\n/* harmony export */   ToneEnum: () => (/* binding */ ToneEnum),\n/* harmony export */   WordChoiceEnum: () => (/* binding */ WordChoiceEnum)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod */ \"(rsc)/../../node_modules/zod/v4/classic/schemas.js\");\n\n/** ---------- Typed Option Enums (hints, but allow custom strings) ---------- */ const ToneEnum = zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n    'confident',\n    'direct',\n    'professional',\n    'friendly',\n    'technical',\n    'executive',\n    'concise',\n    'persuasive',\n    'no-fluff'\n]);\nconst WordChoiceEnum = zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n    'simple',\n    'precise',\n    'impactful',\n    'measurable',\n    'action-oriented',\n    'jargon-light',\n    'ats-keyword-rich'\n]);\nconst StyleEnum = zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n    'bullet-first',\n    'narrative-summary',\n    'results-then-actions',\n    'problem-action-result',\n    'skills-then-impact',\n    'ats-friendly',\n    'modern'\n]);\nconst AttributeEnum = zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n    'leadership',\n    'ownership',\n    'mentorship',\n    'systems-thinking',\n    'customer-obsession',\n    'delivery-focus',\n    'quality-first',\n    'speed-to-impact',\n    'collaboration',\n    'innovation',\n    'data-driven'\n]);\n/** ---------- Input Schemas ---------- */ const HumanizeOptSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    enabled: zod__WEBPACK_IMPORTED_MODULE_0__.boolean().optional()\n});\nconst OptionsSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    tone: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.union([\n        ToneEnum,\n        zod__WEBPACK_IMPORTED_MODULE_0__.string()\n    ])).optional(),\n    wordChoice: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.union([\n        WordChoiceEnum,\n        zod__WEBPACK_IMPORTED_MODULE_0__.string()\n    ])).optional(),\n    style: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.union([\n        StyleEnum,\n        zod__WEBPACK_IMPORTED_MODULE_0__.string()\n    ])).optional(),\n    attributes: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__.union([\n        AttributeEnum,\n        zod__WEBPACK_IMPORTED_MODULE_0__.string()\n    ])).optional(),\n    targetRole: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    language: zod__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    coverLetterWordCount: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(120).max(320).optional(),\n    personalNoteMaxSentences: zod__WEBPACK_IMPORTED_MODULE_0__.number().int().min(1).max(3).optional(),\n    portfolioFormat: zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'markdown',\n        'plain'\n    ]).optional(),\n    portfolioSections: zod__WEBPACK_IMPORTED_MODULE_0__.array(zod__WEBPACK_IMPORTED_MODULE_0__[\"enum\"]([\n        'featured',\n        'projects',\n        'skills',\n        'links',\n        'about'\n    ]).or(zod__WEBPACK_IMPORTED_MODULE_0__.string())).optional(),\n    humanize: HumanizeOptSchema.optional()\n});\nconst BodySchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    cvText: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(20, 'CV text too short'),\n    jdText: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(20, 'JD text too short'),\n    options: OptionsSchema.optional()\n});\n/** ---------- Output Schema ---------- */ const OutputSchema = zod__WEBPACK_IMPORTED_MODULE_0__.object({\n    enhanced_resume: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(50),\n    cover_letter: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(50),\n    portfolio: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(20),\n    personal_note: zod__WEBPACK_IMPORTED_MODULE_0__.string().min(5)\n});\n/** ---------- Utils ---------- */ function stripCodeFences(text) {\n    const trimmed = text.trim();\n    if (trimmed.startsWith('```')) {\n        const firstFence = trimmed.indexOf('\\n');\n        if (firstFence !== -1) {\n            const withoutFence = trimmed.slice(firstFence + 1);\n            const lastFence = withoutFence.lastIndexOf('```');\n            return lastFence !== -1 ? withoutFence.slice(0, lastFence).trim() : withoutFence.trim();\n        }\n    }\n    return trimmed;\n}\nfunction tryParseJson(text) {\n    if (!text) return null;\n    const cleaned = stripCodeFences(text);\n    // Fast path: already a pure JSON object\n    const trimmed = cleaned.trim();\n    if (trimmed.startsWith('{')) {\n        try {\n            return JSON.parse(trimmed);\n        } catch  {\n        // fall through to robust extraction\n        }\n    }\n    // Robust extraction of the first complete top-level JSON object\n    function extractFirstJsonObject(s) {\n        let start = -1;\n        let depth = 0;\n        let inString = false;\n        let escape = false;\n        for(let i = 0; i < s.length; i++){\n            const ch = s[i];\n            if (start === -1) {\n                if (ch === '{') {\n                    start = i;\n                    depth = 1;\n                    inString = false;\n                    escape = false;\n                }\n                continue;\n            }\n            if (inString) {\n                if (escape) {\n                    escape = false;\n                } else if (ch === '\\\\') {\n                    escape = true;\n                } else if (ch === '\"') {\n                    inString = false;\n                }\n                continue;\n            }\n            if (ch === '\"') {\n                inString = true;\n            } else if (ch === '{') {\n                depth++;\n            } else if (ch === '}') {\n                depth--;\n                if (depth === 0) {\n                    return s.slice(start, i + 1);\n                }\n            }\n        }\n        return null;\n    }\n    const candidate = extractFirstJsonObject(cleaned);\n    if (candidate) {\n        try {\n            return JSON.parse(candidate);\n        } catch  {\n            // ignore and fall through\n            console.log('Error parsing JSON:', candidate);\n        }\n    }\n    return {\n        raw: text\n    };\n}\nfunction joinOpts(label, arr) {\n    return arr && arr.length ? `${label}: ${arr.join(', ')}.` : '';\n}\n/** Subtle randomness to avoid template-y output. */ function buildStyleSeed() {\n    // Simple per-request seed; good enough for gentle variation\n    return Math.floor(Math.random() * 10000) + 1 // 1..10000\n    ;\n}\nfunction subtleRandomization(seed) {\n    const mod2 = seed % 2;\n    const mod3 = seed % 3;\n    const mod5 = seed % 5;\n    const sentenceOpen = mod3 === 0 ? 'In summaries, prefer a short opener followed by a slightly longer sentence.' : mod3 === 1 ? 'In summaries, start with a concrete outcome, then briefly describe the action.' : 'In summaries, start with the action, then quantify the outcome.';\n    const bulletCadence = mod2 === 0 ? 'Alternate bullet structures: (Action → Result) then (Result → How).' : 'Prefer (Result → Action → Tech) structure for every second bullet.';\n    const connectors = mod5 === 0 ? 'Use varied connectors sparingly: \"so that\", \"which reduced\", \"resulting in\" — avoid repeating the same one.' : 'Rotate connective phrases lightly: \"leading to\", \"resulting in\", \"which improved\".';\n    return `\nSubtle Randomization (seed: ${seed}):\n- ${sentenceOpen}\n- ${bulletCadence}\n- ${connectors}\n- Avoid repetitive sentence starts; diversify verbs across adjacent bullets.\n`.trim();\n}\n/** Humanization guidance (ON by default; can be opted out). */ function humanizationBlock(enabled) {\n    if (!enabled) return '';\n    const keepOriginalPhrasingWeight = 0.3;\n    return `\nHumanity Guardrails (always applied unless disabled):\n- Preserve authentic personal voice from the original CV; retain roughly ${Math.round(keepOriginalPhrasingWeight * 100)}% of strong original phrasing.\n- Vary sentence length and rhythm; mix short and medium sentences.\n- Avoid template openings like \"I am excited to apply…\"; prefer concrete statements from my experience.\n- Avoid repeating the same verb at the start of consecutive bullets; diversify while keeping meaning.\n- Allow a few natural, non-symmetric constructions (e.g., a brief parenthetical) but keep grammar correct.\n- Never add fluff, opinions, or unverifiable claims.\n- Keep ATS compliance and factual accuracy intact.\n`.trim();\n}\n/** ---------- Prompt Builder ---------- */ function buildSystemPrompt(opts, cv, jd) {\n    const tone = opts?.tone ?? [\n        'confident',\n        'direct',\n        'no-fluff',\n        'professional'\n    ];\n    const word = opts?.wordChoice ?? [\n        'precise',\n        'impactful',\n        'ats-keyword-rich',\n        'action-oriented'\n    ];\n    const style = opts?.style ?? [\n        'ats-friendly',\n        'bullet-first',\n        'modern',\n        'results-then-actions'\n    ];\n    const attributes = opts?.attributes ?? [\n        'ownership',\n        'delivery-focus',\n        'quality-first',\n        'collaboration'\n    ];\n    const targetRole = opts?.targetRole ? `Target role: ${opts.targetRole}.` : '';\n    const language = opts?.language ? `Write in ${opts.language}.` : '';\n    const coverLen = opts?.coverLetterWordCount ?? 180;\n    const noteSentences = opts?.personalNoteMaxSentences ?? 2;\n    const portfolioFormat = opts?.portfolioFormat ?? 'markdown';\n    const portfolioSections = opts?.portfolioSections?.length ? opts.portfolioSections.join(', ') : 'featured, projects, skills';\n    const humanizeEnabled = opts?.humanize?.enabled === false ? false : true;\n    const humanize = humanizationBlock(humanizeEnabled);\n    const seed = buildStyleSeed();\n    const randomness = subtleRandomization(seed);\n    return `\nYou are an expert job application writer and resume editor.\n\nALWAYS write in clear **first-person** voice (\"I\", \"my\") across ALL artifacts: enhanced resume, cover letter, portfolio, and personal note. No third-person.\n\nYour task: Using the provided CV and Job Description (JD), produce FOUR artifacts:\n\n1) \"enhanced_resume\" — Rewrite my CV in first-person for clarity, flow, and impact while preserving all facts. Use a modern, ATS-friendly structure (Summary, Experience, Skills, Education, Projects as applicable). Emphasize JD-aligned achievements/skills. Reorganize and tighten; do not invent.\n2) \"cover_letter\" — First-person, professional, ${coverLen - 30}-${coverLen + 30} words, tightly tailored to the JD; avoid flattery and clichés; show outcomes and scope using only facts in CV/JD.\n3) \"portfolio\" — A concise first-person portfolio document (${portfolioFormat}) highlighting JD-relevant work. Include sections: ${portfolioSections}. Use bullet-first summaries, short impact statements, stacks used, and existing links only; do not invent links.\n4) \"personal_note\" — First-person, ${noteSentences} sentence(s), quick intro to a recruiter explaining fit and value; no fluff, concrete alignment points.\n\nStyle & Guidance:\n${joinOpts('Tone', tone)}\n${joinOpts('Word choice', word)}\n${joinOpts('Writing style', style)}\n${joinOpts('Attributes to signal', attributes)}\n${targetRole}\n${language}\n\nStrict Rules (ATS-optimized):\n- Use ONLY facts present in the CV and JD. Do NOT invent titles, dates, employers, skills, certs, projects, metrics, or links.\n- Prioritize and group JD-required skills/tech/responsibilities at the top of the Skills section and throughout artifacts.\n- Identify and incorporate **all** required JD keywords contextually—use them in bullets, experience, and summary (no keyword stuffing).\n- Include both acronyms and full phrases for key skills/certifications on first mention.\n- Use standard section headings: Summary, Experience, Skills, Education, Projects (single column; basic fonts; no styling).\n- NO tables, multi-columns, images, colors, graphics, headers/footers, text boxes, or special styling.\n- Maintain standard section order in the resume: Summary, Experience, Skills, Education, Projects.\n- Dates: consistent format (e.g., \"MMM YYYY – MMM YYYY\" or \"YYYY – YYYY\").\n- Titles before company names; location optional.\n- Bullets: start with strong action verbs; keep most under ~200 characters.\n- Avoid special characters that break parsing (no ✓ ★ →). Use plain ASCII bullets/hyphens.\n- Keep section labels conventional (Experience, Skills, Education, Projects). Do not use creative labels.\n- Skills: group by category (Languages, Frameworks, Tools) and order by JD relevance; avoid soft skills in Skills section.\n- Projects: explicitly list stack/tech; state role and responsibility in first-person.\n- No nested lists or deep indentation.\n- Keep language natural, crisp, readable for humans and ATS.\n\n${humanize}\n${randomness}\n\nOutput JSON ONLY (no markdown, no extra text) with this exact shape:\n{\n  \"enhanced_resume\": \"string\",\n  \"cover_letter\": \"string\",\n  \"portfolio\": \"string\",\n  \"personal_note\": \"string\"\n}\n\nInputs:\n\nCV:\n\"\"\"${cv}\"\"\"\n\nJD:\n\"\"\"${jd}\"\"\"\n`.trim();\n}\n/** ---------- HTTP Handler ---------- */ async function POST(req) {\n    try {\n        const body = await req.json();\n        const parsed = BodySchema.safeParse(body);\n        if (!parsed.success) {\n            return Response.json({\n                error: 'Invalid payload',\n                issues: parsed.error.flatten()\n            }, {\n                status: 400\n            });\n        }\n        // Config\n        const baseUrl = process.env.AI_BASE_URL || 'http://localhost:1234/v1';\n        const apiKey = process.env.AI_API_KEY || 'lm-studio';\n        const model = process.env.OPENAI_MODEL || 'openai/gpt-oss-20b';\n        const strictJson = process.env.OPENAI_STRICT_JSON === '1';\n        const { cvText, jdText, options } = parsed.data;\n        const opts = options;\n        const systemPrompt = buildSystemPrompt(opts, cvText, jdText);\n        const userPrompt = 'Return ONLY the JSON object with \"enhanced_resume\", \"cover_letter\", \"portfolio\", \"personal_note\". No preamble.';\n        async function callOnce(temp) {\n            const payload = {\n                model,\n                messages: [\n                    {\n                        role: 'system',\n                        content: systemPrompt\n                    },\n                    {\n                        role: 'user',\n                        content: userPrompt\n                    }\n                ],\n                temperature: temp,\n                top_p: 0.9,\n                max_tokens: 2400\n            };\n            // Enable JSON mode for OpenAI automatically; also allow explicit opt-in via env\n            const shouldRequestJsonMode = strictJson || baseUrl.includes('api.openai.com');\n            if (shouldRequestJsonMode) payload.response_format = {\n                type: 'json_object'\n            };\n            const res = await fetch(`${baseUrl}/chat/completions`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${apiKey}`\n                },\n                body: JSON.stringify(payload)\n            });\n            if (!res.ok) {\n                const errText = await res.text();\n                return {\n                    ok: false,\n                    error: errText\n                };\n            }\n            const data = await res.json();\n            const text = data?.choices?.[0]?.message?.content;\n            return {\n                ok: true,\n                text,\n                usage: data?.usage\n            };\n        }\n        // Simple retry strategy with slightly different temperature\n        const first = await callOnce(0.3);\n        let text;\n        let usage;\n        if (!first.ok || !first.text) {\n            const second = await callOnce(0.2);\n            if (!second.ok || !second.text) {\n                return Response.json({\n                    error: 'Model call failed',\n                    detail: first.ok ? first : second\n                }, {\n                    status: 502\n                });\n            }\n            text = second.text;\n            usage = second.usage;\n        } else {\n            text = first.text;\n            usage = first.usage;\n        }\n        const parsedJson = tryParseJson(text);\n        const validated = OutputSchema.safeParse(parsedJson);\n        if (!validated.success) {\n            return Response.json({\n                error: 'Invalid model JSON shape',\n                raw: text,\n                issues: validated.error.flatten()\n            }, {\n                status: 502\n            });\n        }\n        return Response.json({\n            artifacts: validated.data,\n            usage\n        });\n    } catch (err) {\n        console.error(err);\n        return Response.json({\n            error: 'Unexpected error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/studio/generate-local/route.ts\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/zod"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fstudio%2Fgenerate-local%2Froute&page=%2Fapi%2Fstudio%2Fgenerate-local%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fstudio%2Fgenerate-local%2Froute.ts&appDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Comrij%5COneDrive%5CDesktop%5CRepos%5CSnow%20HQ%5Capps%5Cstudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();